<?php

/**
 * @file
 * Bar theme file.
 */

use Drupal\node\NodeInterface;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_HOOK().
 */
function bar_preprocess_html(&$variables) {
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function bar_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof NodeInterface) {
    $node_type = $node->getType();
    $suggestions[] = 'page__' . $node_type;
  }
}

/**
 * Override the core theme suggestions for taxonomy so they match
 * the structure of node suggestions.
 *
 * Implements hook_theme_suggestions_HOOK().
 */
function bar_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  // Completely start over so that we get suggestions in the right order
  // without having to try really hard.
  $suggestions = [];

  /** @var \Drupal\taxonomy\TermInterface $term */
  $term = $variables['elements']['#taxonomy_term'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle();
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->id();
  $suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Add Section name as class to layout and bootstrap classes for column widths.
 */
function bar_preprocess_layout(&$variables) {
  // Label class.
  if (isset($variables['settings']['label'])) {
    if (!isset($variables['attributes']['class'])) {
      $variables['attributes']['class'] = [];
    }
    $label_class = HTML::getClass($variables['settings']['label']);
    $variables['attributes']['class'][] = "section-label-$label_class";
  }

  // Bootstrap row and column classes.
  $variables['attributes']['class'][] = 'row';
  if (isset($variables['settings']['column_widths'])) {
    $mapping = [
        '25' => 'col-md-3',
        '33' => 'col-md-4',
        '34' => 'col-md-4',
        '50' => 'col-md-6',
        '66' => 'col-md-8',
        '67' => 'col-md-8',
        '75' => 'col-md-9',
    ];
    $column_names = [
        'first',
        'second',
        'third',
        'fourth',
    ];
    $widths = explode("-", $variables['settings']['column_widths']);
    foreach ($widths as $delta => $width) {
      if (isset($variables['region_attributes'][$column_names[$delta]])) {
        $variables['region_attributes'][$column_names[$delta]]->addClass($mapping[$width]);
      }
    }
  }
}